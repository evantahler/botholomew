name: Test
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  compile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
      - run: cd backend && cp .env.example .env
      - run: cd frontend && cp .env.example .env
      - run: bun install
      - name: compile backend
        run: cd backend && bun compile
      - name: compile frontend
        run: cd frontend && bun run build

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
      - run: bun install
      - name: lint backend
        run: cd backend && bun lint
      - name: lint frontend
        run: cd frontend && bun lint

  test-backend:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
        ports:
          - 6379:6379
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: botholomew_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
      - run: bun install
      - run: cd backend && cp .env.example .env
      - name: backend tests
        run: cd backend && bun test

  test-frontend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2
      - run: bun install
      - run: cd frontend && cp .env.example .env
      - name: frontend tests
        run: cd frontend && bun run test

  complete:
    runs-on: ubuntu-latest
    needs: [compile, lint, test-backend, test-frontend]
    steps:
      - run: echo "Done!"
